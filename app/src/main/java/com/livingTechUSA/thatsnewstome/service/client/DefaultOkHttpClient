package com.axxess.palliative.service.api.clients

import com.axxess.palliative.BuildConfig
import com.axxess.palliative.service.api.IOkHttpClient
import com.axxess.palliative.service.api.interceptors.DefaultInterceptor
import com.facebook.stetho.okhttp3.StethoInterceptor
import okhttp3.OkHttpClient
import okhttp3.logging.HttpLoggingInterceptor
import org.koin.core.component.KoinComponent
import org.koin.core.component.inject

class DefaultOkHttpClient : IOkHttpClient, KoinComponent {

    private val defaultInterceptor: DefaultInterceptor by inject()
    private val stethoInterceptor: StethoInterceptor by inject()

    private lateinit var mOkHttpClient: OkHttpClient

    init {
        buildOkHttpClient()
    }

    override fun buildOkHttpClient() {
        val builder = OkHttpClient.Builder()
        builder.addInterceptor(defaultInterceptor)
        builder.addNetworkInterceptor(stethoInterceptor)
        if(BuildConfig.DEBUG) {
            val loggingInterceptor = HttpLoggingInterceptor()
            loggingInterceptor.level = HttpLoggingInterceptor.Level.BODY
            builder.addInterceptor(loggingInterceptor)
        }

        mOkHttpClient = builder.build()
    }

    override fun provideOkHttpClient(): OkHttpClient = mOkHttpClient

}